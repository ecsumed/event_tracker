from datetime import datetime
import json

from flask import Flask
from flask import request
from flask import jsonify

from google_api import Static_Map_API
from models import db
from models import Event
from models import Event_Type
from models import Point


app = Flask(__name__)

image_api_handler = Static_Map_API()

# This hook ensures that a connection is opened to handle any queries
# generated by the request.
@app.before_request
def _db_connect():
    db.connect()


# This hook ensures that the connection is closed when we've finished
# processing the request.
@app.teardown_request
def _db_close(exc):
    if not db.is_closed():
        db.close()


def error_response(code=-1, error=""):
    """
    Return a JSON string for any error condition.
    """
    return jsonify({
                   "status": code,
                   "error": 1,
                   "error_msg": error
                   })


def success_response(code=1, response=""):
    """
    Return a JSON string for a successful condition.
    """
    return jsonify({
                   "status": code,
                   "response": response
                   })


@app.route('/addEvent', methods=['POST'])
def addEvent():
    """
    API call to add an event.

    INPUT:
        {"x": "", "y": "", "event_time": "", "event_type": ""}

    OUTPUT:
        Success: 1
        Failure: 2
    """
    coord = request.form["coord"]

    event_time = request.form["event_time"]
    event_type = Event_Type.get_id(request.form["event_type"])
    report_time = datetime.now()

    Event.addEvent(coord,
                   event_time,
                   report_time,
                   event_type,
                   )

    return success_response(1, "Added")


@app.route('/')
def index():
    """
        Index page with the latest events.
    """
    image_api_handler.fetch_image()


    return success_response(1, "Added")

if __name__ == "__main__":
    app.debug = True
    app.run(host='0.0.0.0')
